name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

defaults:
  run:
    shell: bash

env:
  ACTIONS_RUNNER_DEBUG: true

jobs:
  deploy:
    timeout-minutes: 3
    runs-on: ['ubuntu-latest']
    steps:
      - name: 'üîë Checkout'
        uses: actions/checkout@v4

      - name: 'Get pnpm Version'
        id: pnpm-version
        run: |
          PNPM_VERSION=$(cat package.json | jq --raw-output '.packageManager' | awk -F'@' '{print $2}')
          echo "PNPM_VERSION=$PNPM_VERSION" >> $GITHUB_OUTPUT

      - name: 'üçÇ Setup pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.pnpm-version.outputs.PNPM_VERSION }}

      - name: 'üê¢ Setup Node.js'
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: 'lts/*'

      - name: 'üì¶ Install Dependencies'
        run: pnpm install --frozen-lockfile

      - name: 'üßπ Lint, Check & Build'
        run: |
          pnpm dlx @biomejs/biome check . --reporter='github'
          # disabled until https://github.com/ithacaxyz/porto/pull/37 is merged
          # pnpm typecheck
          # pnpm build

      - name: 'üî∏ Cloudflare Workers - Deploy Server'
        working-directory: 'server'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          pnpm wrangler deploy \
            --env='production' \
            --config='wrangler.toml'

      - name: 'üî∏ Cloudflare Workers - Deploy Client'
        working-directory: 'client'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          pnpm wrangler deploy \
            --env='production' \
            --config='wrangler.toml'